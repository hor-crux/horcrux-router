var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
define(["require", "exports", 'horcrux-flux', './routestatic', './route'], function (require, exports, horcrux_flux_1, routestatic_1, route_1) {
    var Router = (function (_super) {
        __extends(Router, _super);
        function Router() {
            _super.call(this);
            //INSTANCE
            this.routes = [];
            this.views = [];
            Router._static.addRouter(this);
        }
        Router.prototype.addView = function (view) {
            this.views.push(view);
            Router._static.route(window.location.hash.substring(1), false, this, view.name);
        };
        Router.prototype.removeView = function (view) {
            this.views.splice(this.views.indexOf(view), 1);
        };
        Router.prototype.config = function (routeConfig) {
            this.routes.push(new route_1.default(routeConfig));
        };
        Router.prototype.beforeRoute = function (url) {
            var route = this.findRoute(url);
            if (!!route && !!route.redirect)
                return Promise.reject(route.redirect);
            else
                return Promise.resolve('');
        };
        /**
         * iterates over all registered views and asks them to deactivate
         */
        Router.prototype.canDeactivate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return Promise.resolve('');
            return Promise.all(this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .map(function (view) {
                return view.canDeavtivate(route.getComponentSelector(view.name), route.getArgs(url));
            }));
        };
        /**
         * iterates over all registered views and asks them to activate
         */
        Router.prototype.canActivate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return Promise.resolve('');
            return Promise.all(this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .map(function (view) {
                return view.canAvtivate(route.getComponentSelector(view.name), route.getArgs(url));
            }));
        };
        /**
         * iterates over all registered views activate the new component
         */
        Router.prototype.activate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return void 0;
            this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .forEach(function (view) {
                view.activate(route.getComponentSelector(view.name), route.getArgs(url));
            });
        };
        Router.prototype.findRoute = function (url) {
            for (var key in this.routes) {
                var route = this.routes[key];
                if (route.matches(url))
                    return route;
            }
            return void 0;
        };
        // STATIC
        Router._static = new routestatic_1.default();
        return Router;
    })(horcrux_flux_1.Store);
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Router;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci9yb3V0ZXIudHMiXSwibmFtZXMiOlsiUm91dGVyIiwiUm91dGVyLmNvbnN0cnVjdG9yIiwiUm91dGVyLmFkZFZpZXciLCJSb3V0ZXIucmVtb3ZlVmlldyIsIlJvdXRlci5jb25maWciLCJSb3V0ZXIuYmVmb3JlUm91dGUiLCJSb3V0ZXIuY2FuRGVhY3RpdmF0ZSIsIlJvdXRlci5jYW5BY3RpdmF0ZSIsIlJvdXRlci5hY3RpdmF0ZSIsIlJvdXRlci5maW5kUm91dGUiXSwibWFwcGluZ3MiOiI7Ozs7OztJQU9BO1FBQW9DQSwwQkFBWUE7UUFVL0NBO1lBQ0NDLGlCQUFPQSxDQUFDQTtZQUxUQSxVQUFVQTtZQUNBQSxXQUFNQSxHQUFpQkEsRUFBRUEsQ0FBQ0E7WUFDMUJBLFVBQUtBLEdBQWtCQSxFQUFFQSxDQUFDQTtZQUluQ0EsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFDaENBLENBQUNBO1FBRU1ELHdCQUFPQSxHQUFkQSxVQUFlQSxJQUFXQTtZQUN6QkUsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDdEJBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLEVBQUVBLEtBQUtBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLENBQUFBO1FBQ2hGQSxDQUFDQTtRQUVNRiwyQkFBVUEsR0FBakJBLFVBQWtCQSxJQUFXQTtZQUM1QkcsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDaERBLENBQUNBO1FBRU1ILHVCQUFNQSxHQUFiQSxV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QUFEQSxDQXBHQSxBQW9HQ0EsRUFwR21DLG9CQUFLLEVBb0d4QztJQXBHRDs0QkFvR0MsQ0FBQSIsImZpbGUiOiJyb3V0ZXIvcm91dGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdG9yZSwgaGFuZGxlfSBmcm9tICdob3JjcnV4LWZsdXgnXHJcbmltcG9ydCB7SVJvdXRlQ29uZmlnfSBmcm9tICcuL3JvdXRlY29uZmlnJ1xyXG5pbXBvcnQgUm91dGVTdGF0aWMgZnJvbSAnLi9yb3V0ZXN0YXRpYydcclxuaW1wb3J0IFJvdXRlIGZyb20gJy4vcm91dGUnO1xyXG5pbXBvcnQgUm91dGVBY3Rpb25zIGZyb20gJy4vYWN0aW9ucydcclxuaW1wb3J0IEhjVmlldyBmcm9tICcuLi92aWV3J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm91dGVyIGV4dGVuZHMgU3RvcmU8Um91dGU+IHtcclxuXHRcclxuXHQvLyBTVEFUSUNcclxuXHRzdGF0aWMgX3N0YXRpYyA9IG5ldyBSb3V0ZVN0YXRpYygpO1xyXG5cdFxyXG5cdFxyXG5cdC8vSU5TVEFOQ0VcclxuXHRwcm90ZWN0ZWQgcm91dGVzOiBBcnJheTxSb3V0ZT4gPSBbXTtcclxuXHRwcm90ZWN0ZWQgdmlld3M6IEFycmF5PEhjVmlldz4gPSBbXTtcclxuXHRcclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblx0XHRSb3V0ZXIuX3N0YXRpYy5hZGRSb3V0ZXIodGhpcyk7XHJcblx0fVxyXG5cdFxyXG5cdHB1YmxpYyBhZGRWaWV3KHZpZXc6SGNWaWV3KTogdm9pZCB7XHJcblx0XHR0aGlzLnZpZXdzLnB1c2godmlldyk7XHJcblx0XHRSb3V0ZXIuX3N0YXRpYy5yb3V0ZSh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSksIGZhbHNlLCB0aGlzLCB2aWV3Lm5hbWUpXHJcblx0fVxyXG5cdFxyXG5cdHB1YmxpYyByZW1vdmVWaWV3KHZpZXc6SGNWaWV3KTogdm9pZCB7XHJcblx0XHR0aGlzLnZpZXdzLnNwbGljZSh0aGlzLnZpZXdzLmluZGV4T2YodmlldyksIDEpO1xyXG5cdH1cclxuXHRcclxuXHRwdWJsaWMgY29uZmlnKHJvdXRlQ29uZmlnOklSb3V0ZUNvbmZpZyk6IHZvaWQge1xyXG5cdFx0dGhpcy5yb3V0ZXMucHVzaChuZXcgUm91dGUocm91dGVDb25maWcpKTtcclxuXHR9XHJcblx0XHJcblx0cHVibGljIGJlZm9yZVJvdXRlKHVybDpzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG5cdFx0bGV0IHJvdXRlID0gdGhpcy5maW5kUm91dGUodXJsKTtcclxuXHRcdGlmKCEhcm91dGUgJiYgISFyb3V0ZS5yZWRpcmVjdClcclxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KHJvdXRlLnJlZGlyZWN0KVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCcnKTtcclxuXHR9XHJcblx0XHJcblx0LyoqXHJcblx0ICogaXRlcmF0ZXMgb3ZlciBhbGwgcmVnaXN0ZXJlZCB2aWV3cyBhbmQgYXNrcyB0aGVtIHRvIGRlYWN0aXZhdGVcclxuXHQgKi9cclxuXHRwdWJsaWMgY2FuRGVhY3RpdmF0ZSh1cmw6c3RyaW5nLCB2aWV3TmFtZT86c3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuXHRcdGxldCByb3V0ZSA9IHRoaXMuZmluZFJvdXRlKHVybCk7XHJcblx0XHRpZighcm91dGUpXHJcblx0XHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoJycpXHJcblx0XHRcdFxyXG5cdFx0cmV0dXJuIFByb21pc2UuYWxsKFxyXG5cdFx0XHR0aGlzLnZpZXdzXHJcblx0XHRcdC5maWx0ZXIodmlldyA9PiB7XHJcblx0XHRcdFx0cmV0dXJuICF2aWV3TmFtZSB8fCB2aWV3Lm5hbWUgPT09IHZpZXdOYW1lO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQubWFwKHZpZXcgPT4ge1xyXG5cdFx0XHRcdHJldHVybiB2aWV3LmNhbkRlYXZ0aXZhdGUocm91dGUuZ2V0Q29tcG9uZW50U2VsZWN0b3Iodmlldy5uYW1lKSwgcm91dGUuZ2V0QXJncyh1cmwpKVxyXG5cdFx0XHR9KVxyXG5cdFx0KTtcclxuXHR9XHJcblx0XHJcblx0LyoqXHJcblx0ICogaXRlcmF0ZXMgb3ZlciBhbGwgcmVnaXN0ZXJlZCB2aWV3cyBhbmQgYXNrcyB0aGVtIHRvIGFjdGl2YXRlXHJcblx0ICovXHJcblx0cHVibGljIGNhbkFjdGl2YXRlKHVybDpzdHJpbmcsIHZpZXdOYW1lPzpzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG5cdFx0bGV0IHJvdXRlID0gdGhpcy5maW5kUm91dGUodXJsKTtcclxuXHRcdGlmKCFyb3V0ZSlcclxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgnJylcclxuXHRcdFx0XHJcblx0XHRyZXR1cm4gUHJvbWlzZS5hbGwoXHJcblx0XHRcdHRoaXMudmlld3NcclxuXHRcdFx0LmZpbHRlcih2aWV3ID0+IHtcclxuXHRcdFx0XHRyZXR1cm4gIXZpZXdOYW1lIHx8IHZpZXcubmFtZSA9PT0gdmlld05hbWU7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5tYXAodmlldyA9PiB7XHJcblx0XHRcdFx0cmV0dXJuIHZpZXcuY2FuQXZ0aXZhdGUocm91dGUuZ2V0Q29tcG9uZW50U2VsZWN0b3Iodmlldy5uYW1lKSwgcm91dGUuZ2V0QXJncyh1cmwpKTtcclxuXHRcdFx0fSlcclxuXHRcdCk7XHJcblx0fVxyXG5cdFxyXG5cdC8qKlxyXG5cdCAqIGl0ZXJhdGVzIG92ZXIgYWxsIHJlZ2lzdGVyZWQgdmlld3MgYWN0aXZhdGUgdGhlIG5ldyBjb21wb25lbnRcclxuXHQgKi9cclxuXHRwdWJsaWMgYWN0aXZhdGUodXJsOnN0cmluZywgdmlld05hbWU/OnN0cmluZyk6IHZvaWQge1xyXG5cdFx0bGV0IHJvdXRlID0gdGhpcy5maW5kUm91dGUodXJsKTtcclxuXHRcdGlmKCFyb3V0ZSlcclxuXHRcdFx0cmV0dXJuIHZvaWQgMDtcclxuXHRcdFx0XHJcblx0XHR0aGlzLnZpZXdzXHJcblx0XHQuZmlsdGVyKHZpZXcgPT4ge1xyXG5cdFx0XHRyZXR1cm4gIXZpZXdOYW1lIHx8IHZpZXcubmFtZSA9PT0gdmlld05hbWU7XHJcblx0XHR9KVxyXG5cdFx0LmZvckVhY2godmlldyA9PiB7XHJcblx0XHRcdHZpZXcuYWN0aXZhdGUocm91dGUuZ2V0Q29tcG9uZW50U2VsZWN0b3Iodmlldy5uYW1lKSwgcm91dGUuZ2V0QXJncyh1cmwpKTtcclxuXHRcdH0pXHJcblx0fVxyXG5cdFxyXG5cdHByb3RlY3RlZCBmaW5kUm91dGUodXJsOnN0cmluZyk6IFJvdXRlIHtcclxuXHRcdGZvcihsZXQga2V5IGluIHRoaXMucm91dGVzKSB7XHJcblx0XHRcdGxldCByb3V0ZSA9IHRoaXMucm91dGVzW2tleV07XHJcblx0XHRcdGlmKHJvdXRlLm1hdGNoZXModXJsKSlcclxuXHRcdFx0XHRyZXR1cm4gcm91dGU7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdHJldHVybiB2b2lkIDA7XHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9