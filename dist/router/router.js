var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
define(["require", "exports", 'horcrux-flux', './routestatic', './route'], function (require, exports, horcrux_flux_1, routestatic_1, route_1) {
    var Router = (function (_super) {
        __extends(Router, _super);
        function Router() {
            _super.call(this);
            //INSTANCE
            this.routes = [];
            this.views = [];
            Router._static.addRouter(this);
        }
        Router.prototype.addView = function (view) {
            this.views.push(view);
            Router._static.route(window.location.hash.substring(1), false, this, view.name);
        };
        Router.prototype.removeView = function (view) {
            this.views.splice(this.views.indexOf(view), 1);
        };
        Router.prototype.config = function (routeConfig) {
            this.routes.push(new route_1.default(routeConfig));
        };
        Router.prototype.beforeRoute = function (url) {
            var route = this.findRoute(url);
            if (!!route && !!route.redirect)
                return Promise.reject(route.redirect);
            else
                return Promise.resolve('');
        };
        /**
         * iterates over all registered views and asks them to deactivate
         */
        Router.prototype.canDeactivate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return Promise.resolve('');
            return Promise.all(this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .map(function (view) {
                return view.canDeavtivate(route.getComponentSelector(view.name), route.getArgs(url));
            }));
        };
        /**
         * iterates over all registered views and asks them to activate
         */
        Router.prototype.canActivate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return Promise.resolve('');
            return Promise.all(this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .map(function (view) {
                return view.canAvtivate(route.getComponentSelector(view.name), route.getArgs(url));
            }));
        };
        /**
         * iterates over all registered views activate the new component
         */
        Router.prototype.activate = function (url, viewName) {
            var route = this.findRoute(url);
            if (!route)
                return void 0;
            this.views
                .filter(function (view) {
                return !viewName || view.name === viewName;
            })
                .forEach(function (view) {
                view.activate(route.getComponentSelector(view.name), route.getArgs(url));
            });
        };
        Router.prototype.findRoute = function (url) {
            for (var key in this.routes) {
                var route = this.routes[key];
                if (route.matches(url))
                    return route;
            }
            return void 0;
        };
        // STATIC
        Router._static = new routestatic_1.default();
        return Router;
    })(horcrux_flux_1.Store);
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Router;
});

//# sourceMappingURL=data:application/json;base64,
